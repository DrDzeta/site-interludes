# Generated by Django 4.2.16 on 2024-10-20 14:53

from django.db import migrations, models
import site_settings.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email contact')),
                ('hosting_school', models.CharField(choices=[('U', 'ENS Ulm'), ('L', 'ENS Lyon'), ('R', 'ENS Rennes'), ('C', 'ENS Paris Saclay')], default='U', max_length=1, verbose_name="École hébergeant l'événement")),
                ('ticket_url', models.URLField(blank=True, max_length=300, null=True, verbose_name='Lien billeterie')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Date de début')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('price_entry_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name="prix d'inscription (non-salarié)")),
                ('price_entry_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name="prix d'inscription (salarié)")),
                ('price_sleep_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name="prix d'hébergement (non-salarié)")),
                ('price_sleep_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name="prix d'hébergement (salarié)")),
                ('price_friday_evening_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du vendredi soir (non-salarié)')),
                ('price_friday_evening_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du vendredi soir (salarié)')),
                ('price_saturday_morning_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du samedi matin (non-salarié)')),
                ('price_saturday_morning_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du samedi matin (salarié)')),
                ('price_saturday_midday_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du samedi midi (non-salarié)')),
                ('price_saturday_midday_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du samedi midi (salarié)')),
                ('price_saturday_evening_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du samedi soir (non-salarié)')),
                ('price_saturday_evening_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du samedi soir (salarié)')),
                ('price_sunday_morning_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du dimanche matin (non-salarié)')),
                ('price_sunday_morning_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du dimanche matin (salarié)')),
                ('price_sunday_midday_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du dimanche midi (non-salarié)')),
                ('price_sunday_midday_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du dimanche midi (salarié)')),
                ('price_sunday_evening_meal_unpaid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du dimanche soir (non-salarié)')),
                ('price_sunday_evening_meal_paid', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='prix du repas du dimanche soir (salarié)')),
                ('meal_friday_evening', models.BooleanField(default=True, verbose_name='Repas vendredi soir')),
                ('meal_saturday_morning', models.BooleanField(default=True, verbose_name='Repas samedi matin')),
                ('meal_saturday_midday', models.BooleanField(default=True, verbose_name='Repas samedi midi')),
                ('meal_saturday_evening', models.BooleanField(default=True, verbose_name='Repas samedi soir')),
                ('meal_sunday_morning', models.BooleanField(default=True, verbose_name='Repas dimanche matin')),
                ('meal_sunday_midday', models.BooleanField(default=True, verbose_name='Repas dimanche midi')),
                ('meal_sunday_evening', models.BooleanField(default=True, verbose_name='Repas dimanche soir')),
                ('menu_friday_evening', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de vendredi soir')),
                ('menu_saturday_morning', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de samedi matin')),
                ('menu_saturday_midday', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de samedi midi')),
                ('menu_saturday_evening', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de samedi soir')),
                ('menu_sunday_morning', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de dimanche matin')),
                ('menu_sunday_midday', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de dimanche midi')),
                ('menu_sunday_evening', models.CharField(blank=True, default='', max_length=400, verbose_name='Menu du repas de dimanche soir')),
                ('registrations_open', models.BooleanField(default=True, verbose_name='Ouvrir la création de compte')),
                ('inscriptions_open', models.BooleanField(default=False, help_text="Permet d'ouvrir le formulaire d'inscription (repas et dodo; l'inscription aux activité est ouvrable en plus)", verbose_name='Ouvrir les inscriptions')),
                ('activity_inscriptions_open', models.BooleanField(default=False, help_text="Permet d'ouvrir la partie du formulaire d'inscription pour les activités (nécessite l'ouverture des inscriptions)", verbose_name="Ouvrir l'inscription aux activitées")),
                ('activity_submission_open', models.BooleanField(default=False, help_text="Permet de proposer une activité via le formulaire dédié. Nécessite d'ouvrir la création de comptes.", verbose_name="Ouvrir l'ajout d'activité")),
                ('notify_on_activity_submission', models.BooleanField(default=True, help_text="Envoie un email (à l'email de contact) lorsqu'une nouvelle activité est ajoutée via le formulaire.", verbose_name="Notification d'ajout d'activité")),
                ('show_host_emails', models.BooleanField(default=False, help_text="Ces mail sont affichés sur la page activités pour qu'ils puissent être contactés", verbose_name="Afficher les mails des orgas d'activités")),
                ('inscriptions_start', models.DateTimeField(blank=True, help_text="Cette date n'est qu'informative. Les inscription s'ouvrent via la checkbox uniquement", null=True, verbose_name='Ouverture des inscriptions')),
                ('inscriptions_end', models.DateTimeField(blank=True, help_text="Cette date n'est qu'informative. Les inscription se ferment via la checkbox uniquement", null=True, verbose_name='Fermeture des inscriptions')),
                ('display_planning', models.BooleanField(default=False, verbose_name='Afficher le planning')),
                ('planning_file', models.FileField(blank=True, help_text="Le planning autogénéré n'est pas très lisible sur mobile. Je conseille d'en faire une capture sur grand écran et l'ajouter ici.", null=True, storage=site_settings.models.OverwriteStorage('PlanningInterludes'), upload_to='', verbose_name='Version image ou PDF du planning')),
                ('affiche', models.FileField(blank=True, null=True, storage=site_settings.models.OverwriteStorage('AfficheInterludes'), upload_to='', verbose_name='Affiche')),
                ('logo', models.FileField(blank=True, help_text='Apparait dans le header', null=True, storage=site_settings.models.OverwriteStorage('LogoInterludes'), upload_to='', verbose_name='Logo')),
                ('favicon', models.FileField(blank=True, help_text='Icône du site, image au format .ico', null=True, storage=site_settings.models.OverwriteStorage('favicon'), upload_to='', verbose_name='Favicon')),
                ('activities_allocated', models.BooleanField(default=False, help_text="Une fois que l'allocation des activités a été effectuée.", verbose_name='Afficher les activités obtenues')),
                ('discord_link', models.URLField(blank=True, null=True, verbose_name='Lien du serveur discord')),
                ('sleeper_link', models.URLField(blank=True, null=True, verbose_name="Lien du formulaire de demande d'hébergement")),
                ('sleep_host_link', models.URLField(blank=True, null=True, verbose_name="Lien du formulaire de proposition d'hébergement")),
                ('allow_mass_mail', models.BooleanField(default=False, help_text="Par sécurité, n'activez ceci qu'au moment d'envoyer les emails et désactivez le après", verbose_name="Permettre l'envoi de mails collectifs (aux utilisateurs et orgas)")),
                ('user_notified', models.DateTimeField(blank=True, help_text="Email donnant à chaque participant la liste des activités qu'il a obtenu. Ce champ existe pour éviter l'envoie de plusieurs mails successifs. Mettez le à vide pour ré-envoyer un email", null=True, verbose_name="Dernier envoie de l'email de répartition des activités")),
                ('orga_notified', models.DateTimeField(blank=True, help_text="Email donnant à chaque orga d'activité (qui le demande) la liste des participants inscrit à son activite. Ce champ existe pour éviter l'envoie de plusieurs mails successifs. Mettez le à vide pour ré-envoyer un email", null=True, verbose_name="Dernier envoie de l'email de liste des participants")),
                ('orga_planning_notified', models.DateTimeField(blank=True, help_text="Email donnant aux organisateurs d'activité leurs créneaux. Ce champ existe pour éviter l'envoie de plusieurs mails successifs. Mettez le à vide pour ré-envoyer un email", null=True, verbose_name="Dernier envoie de l'email communiquant leurs créneaux aux orgas")),
                ('global_message', models.TextField(blank=True, help_text='Message affiché en haut de chaque page (si non vide). Vous pouvez également modifier le contenu de certaines pages depuis "Pages HTML"', null=True, verbose_name='Message global')),
                ('global_message_as_html', models.BooleanField(default=False, help_text='Assurez vous que le message est bien formaté, cela peut casser toutes les pages du site', verbose_name='Message global au format HTML')),
                ('caption_red', models.CharField(blank=True, default='Jeux de rôle grandeur nature', max_length=200, null=True, verbose_name='Légende planning (rouge)')),
                ('caption_orange', models.CharField(blank=True, default='Jeux de rôle sur table', max_length=200, null=True, verbose_name='Légende planning (orange)')),
                ('caption_yellow', models.CharField(blank=True, default='Activités libres', max_length=200, null=True, verbose_name='Légende planning (jaune)')),
                ('caption_green', models.CharField(blank=True, default='Tournois', max_length=200, null=True, verbose_name='Légende planning (vert)')),
                ('caption_blue', models.CharField(blank=True, default='Événements de début et fin', max_length=200, null=True, verbose_name='Légende planning (bleu)')),
                ('caption_dark_blue', models.CharField(blank=True, default='Jeux vidéos', max_length=200, null=True, verbose_name='Légende planning (bleu foncé)')),
                ('caption_black', models.CharField(blank=True, default='Autre', max_length=200, null=True, verbose_name='Légende planning (noir)')),
            ],
            options={
                'verbose_name': 'paramètres',
                'verbose_name_plural': 'paramètres',
            },
        ),
    ]
