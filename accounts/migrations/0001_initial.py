# Generated by Django 4.2.16 on 2024-10-20 14:53

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='adresse email')),
                ('first_name', models.CharField(max_length=100, verbose_name='prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='nom')),
                ('email_confirmed', models.BooleanField(default=False, verbose_name='email vérifié')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
            },
            managers=[
                ('objects', accounts.models.EmailUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClipperAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clipper_login', models.CharField(max_length=20, unique=True, verbose_name='login clipper')),
                ('unique_id', models.CharField(help_text="Les logins clipper sont rarements unique, mais le combo login+homedir l'est souvent", max_length=1023, verbose_name='identifiant unique')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clipper_account', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'Compte Clipper',
                'verbose_name_plural': 'Comptes Clipper',
            },
        ),
    ]
